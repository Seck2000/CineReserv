@using CineReserv.Models
@{
    ViewData["Title"] = "Sélection des sièges";
    var seance = ViewBag.Seance as Seance;
    var sieges = ViewBag.Sieges as List<Siege>;
    var siegesPreAttribues = ViewBag.SiegesPreAttribues as List<int>;
    var totalQuantity = (int)ViewBag.TotalQuantity;
    var reservationData = ViewBag.ReservationData as string;
}

@if (seance == null || sieges == null)
{
    <div class="alert alert-danger">Une erreur est survenue lors du chargement des informations de la séance ou des sièges.</div>
}
else
{
    <div class="container-fluid mt-4" style="background-color: #1a1a1a; min-height: 100vh;">
        <div class="row">
            <!-- Colonne de gauche: Détails du film et plan de salle -->
            <div class="col-md-8">
                <div class="card mb-4" style="background-color: #2d2d2d; border: none; color: white;">
                    <div class="card-body">
                        <!-- Détails du film -->
                        <div class="d-flex align-items-center mb-4">
                            <img src="@seance.Film.ImageUrl" class="img-fluid rounded me-3" alt="@seance.Film.Titre" style="width: 80px; height: 120px; object-fit: cover;">
                            <div>
                                <h3 class="card-title mb-1 text-white">@seance.Film.Titre</h3>
                                <p class="text-muted mb-1">
                                    <span class="badge bg-secondary me-1">@seance.Film.Classification</span>
                                    <span class="badge bg-info me-1">Français</span>
                                    <span class="badge bg-primary">REGULAR</span>
                                </p>
                                <p class="text-muted mb-0">
                                    <strong>@seance.DateHeure.ToString("dd MMMM yyyy")</strong> à <strong>@seance.DateHeure.ToString("HH:mm")</strong><br>
                                    <strong>@seance.Salle.Nom</strong><br>
                                    <small>Capacité : @seance.Salle.NombrePlaces places</small>
                                </p>
                            </div>
                        </div>
                        
                        <!-- Plan de salle -->
                        <div class="sieges-container mb-4">
                            <!-- Écran -->
                            <div class="text-center mb-4">
                                <div class="bg-secondary text-white py-3 rounded" style="font-size: 18px; font-weight: bold;">
                                    ÉCRAN
                                </div>
                            </div>

                            <!-- Sièges -->
                            @{
                                var siegesGroupes = sieges.GroupBy(s => s.Rang).OrderBy(g => g.Key);
                            }
                            
                            @foreach (var groupe in siegesGroupes)
                            {
                                <div class="row mb-2 align-items-center">
                                    <div class="col-1 text-end">
                                        <strong class="text-white">@groupe.Key</strong>
                                    </div>
                                    <div class="col-10">
                                        <div class="d-flex justify-content-center gap-1 flex-wrap">
                                            @foreach (var siege in groupe.OrderBy(s => s.Numero))
                                            {
                                                var isPreAttribue = siegesPreAttribues?.Contains(siege.Id) == true;
                                                var siegeClass = "btn-outline-primary";
                                                
                                                if (siege.EstOccupe)
                                                {
                                                    siegeClass = "btn-danger";
                                                }
                                                else if (siege.EstReserve)
                                                {
                                                    siegeClass = "btn-warning";
                                                }
                                                else if (isPreAttribue)
                                                {
                                                    siegeClass = "btn-success";
                                                }
                                                else if (siege.Type == "Handicape")
                                                {
                                                    siegeClass = "btn-outline-info";
                                                }

                                                <button type="button" 
                                                        class="btn btn-sm siege-btn @siegeClass @(isPreAttribue ? "pre-selected" : "")"
                                                        data-siege-id="@siege.Id"
                                                        data-siege-nom="@siege.NomComplet"
                                                        data-siege-type="@siege.Type"
                                                        data-siege-rang="@siege.Rang"
                                                        data-siege-numero="@siege.Numero"
                                                        @(siege.EstOccupe ? "disabled" : "")
                                                        onclick="toggleSiege(@siege.Id, '@siege.NomComplet', '@siege.Type', '@siege.Rang', @siege.Numero)"
                                                        style="width: 30px; height: 30px; font-size: 10px; margin: 1px;">
                                                    @siege.Numero
                                                </button>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-1 text-start">
                                        <strong class="text-white">@groupe.Key</strong>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Légende -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-white mb-3">Légende :</h6>
                                <div class="d-flex flex-wrap gap-3">
                                    <div class="d-flex align-items-center">
                                        <div class="siege-legend bg-primary me-2" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                                        <span class="text-white">Disponible</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <div class="siege-legend bg-success me-2" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                                        <span class="text-white">Pré-sélectionné</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <div class="siege-legend bg-warning me-2" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                                        <span class="text-white">Sélectionné</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <div class="siege-legend bg-danger me-2" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                                        <span class="text-white">Occupé</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <div class="siege-legend bg-info me-2" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                                        <span class="text-white">Handicapé</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Contrôles de zoom -->
                        <div class="text-center mb-3">
                            <button type="button" class="btn btn-outline-secondary btn-sm me-2" onclick="zoomOut()">
                                Zoom -
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="zoomIn()">
                                Zoom +
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Colonne de droite: Résumé de la commande -->
            <div class="col-md-4">
                <div class="card shadow-sm sticky-top" style="top: 15px; background-color: #2d2d2d; border: none; color: white;">
                    <div class="card-header" style="background-color: #3d3d3d; border: none;">
                        <h5 class="mb-0 text-white">Résumé de la commande</h5>
                    </div>
                    <div class="card-body">
                        <!-- Sièges sélectionnés -->
                        <div id="siegesSelectionnes" class="mb-3">
                            <h6 class="text-white">Sièges :</h6>
                            <div id="listeSieges" class="text-muted">
                                Aucun siège sélectionné
                            </div>
                        </div>

                        <!-- Détails des coûts -->
                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-white">Billets (comprend les frais de réservation en ligne) :</span>
                                <span class="text-white" id="totalBillets">$0.00</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-white">Impôts :</span>
                                <span class="text-white" id="fraisService">$0.00</span>
                            </div>
                        </div>

                        <!-- Bouton de paiement -->
                        <form asp-action="ConfirmerSieges" asp-controller="Films" method="post" id="siegeForm" onsubmit="return handleFormSubmit(event)">
                            <input type="hidden" name="seanceId" value="@seance.Id" />
                            <input type="hidden" name="siegeIds" id="hiddenSiegeIds" value="" />
                            <button type="submit" id="btnConfirmerSieges" class="btn btn-primary btn-lg w-100 mb-3" disabled>
                                Paiement <span id="btnTotal">$0.00</span>
                            </button>
                        </form>

                        <div class="text-center">
                            <small class="text-muted">
                                <i class="fas fa-info-circle"></i> 
                                Les frais de service peuvent s'appliquer
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        body {
            background-color: #1a1a1a !important;
        }
        
        .siege-btn {
            width: 30px;
            height: 30px;
            font-size: 10px;
            border-radius: 3px;
            margin: 1px;
            transition: all 0.2s ease;
        }
        
        .siege-btn:hover:not(:disabled) {
            transform: scale(1.1);
            box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);
        }
        
        .siege-btn.selected {
            background-color: #0d6efd !important;
            border-color: #0d6efd !important;
            color: white !important;
            box-shadow: 0 0 8px rgba(13, 110, 253, 0.5);
        }
        
        .siege-btn.btn-outline-primary {
            border-color: #0d6efd;
            color: #0d6efd;
        }
        
        .siege-btn.btn-outline-primary:hover {
            background-color: #0d6efd;
            color: white;
        }
        
        .siege-legend {
            border: 1px solid #555;
        }
        
        .card {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }
        
        .sieges-container {
            max-width: 100%;
            overflow-x: auto;
        }
    </style>

    <script>
        let siegesSelectionnes = [];
        let panierItems = [];
        let totalBillets = 0;
        let fraisService = 1.50;
        let totalQuantity = @totalQuantity;
        let reservationData = '@Html.Raw(reservationData)';

        // Charger les articles du panier depuis la session
        document.addEventListener('DOMContentLoaded', function() {
            loadPanierItems();
            updateTotals();
            initializePreSelectedSeats();
            
        });

        function initializePreSelectedSeats() {
            // Marquer les sièges pré-attribués comme sélectionnés
            const preSelectedSeats = document.querySelectorAll('.pre-selected');
            preSelectedSeats.forEach(seat => {
                const siegeId = parseInt(seat.dataset.siegeId);
                siegesSelectionnes.push(siegeId);
                seat.classList.add('selected');
                seat.classList.remove('btn-success');
                seat.classList.add('btn-warning');
            });
            
            updateSiegesDisplay();
            updateConfirmationButton();
        }

        function toggleSiege(siegeId, siegeNom, siegeType, siegeRang, siegeNumero) {
            const siegeBtn = document.querySelector(`[data-siege-id="${siegeId}"]`);
            
            if (siegesSelectionnes.includes(siegeId)) {
                // Désélectionner
                siegesSelectionnes = siegesSelectionnes.filter(id => id !== siegeId);
                siegeBtn.classList.remove('selected', 'btn-warning');
                
                // Remettre le style original
                if (siegeBtn.classList.contains('pre-selected')) {
                    siegeBtn.classList.add('btn-success');
                } else if (siegeType === 'Handicape') {
                    siegeBtn.classList.add('btn-outline-info');
                } else {
                    siegeBtn.classList.add('btn-outline-primary');
                }
            } else {
                // Vérifier si on peut sélectionner ce siège
                if (siegesSelectionnes.length >= totalQuantity) {
                    // Remplacer le dernier siège sélectionné
                    const lastSelectedId = siegesSelectionnes[siegesSelectionnes.length - 1];
                    const lastSelectedBtn = document.querySelector(`[data-siege-id="${lastSelectedId}"]`);
                    
                    // Désélectionner l'ancien
                    lastSelectedBtn.classList.remove('selected', 'btn-warning');
                    if (lastSelectedBtn.classList.contains('pre-selected')) {
                        lastSelectedBtn.classList.add('btn-success');
                    } else if (lastSelectedBtn.dataset.siegeType === 'Handicape') {
                        lastSelectedBtn.classList.add('btn-outline-info');
                    } else {
                        lastSelectedBtn.classList.add('btn-outline-primary');
                    }
                    
                    siegesSelectionnes = siegesSelectionnes.filter(id => id !== lastSelectedId);
                }
                
                // Sélectionner le nouveau siège
                siegesSelectionnes.push(siegeId);
                siegeBtn.classList.add('selected', 'btn-warning');
                siegeBtn.classList.remove('btn-outline-primary', 'btn-outline-info', 'btn-success');
            }
            
            // Vérifier si les sièges sont adjacents pour plus d'un billet
            if (totalQuantity > 1 && siegesSelectionnes.length === totalQuantity) {
                if (!areSeatsAdjacent()) {
                    showAdjacentWarning();
                } else {
                    hideAdjacentWarning();
                }
            }
            
            updateSiegesDisplay();
            updateConfirmationButton();
        }

        function updateSiegesDisplay() {
            const listeSieges = document.getElementById('listeSieges');
            
            if (siegesSelectionnes.length === 0) {
                listeSieges.innerHTML = 'Aucun siège sélectionné';
                listeSieges.className = 'text-muted';
            } else {
                const siegesNoms = siegesSelectionnes.map(id => {
                    const btn = document.querySelector(`[data-siege-id="${id}"]`);
                    return btn.getAttribute('data-siege-nom');
                });
                listeSieges.innerHTML = siegesNoms.join(', ');
                listeSieges.className = 'text-success fw-bold';
            }
        }

        function handleFormSubmit(event) {
            // Vérifier que des sièges sont sélectionnés
            if (siegesSelectionnes.length === 0) {
                alert('Veuillez sélectionner des sièges avant de continuer.');
                event.preventDefault();
                return false;
            }
            
            // Vérifier que le nombre de sièges correspond
            if (siegesSelectionnes.length !== totalQuantity) {
                alert(`Vous devez sélectionner exactement ${totalQuantity} siège${totalQuantity > 1 ? 's' : ''}.`);
                event.preventDefault();
                return false;
            }
            
            return true;
        }

        function updateConfirmationButton() {
            const btn = document.getElementById('btnConfirmerSieges');
            const total = totalBillets + fraisService;
            const hiddenInput = document.getElementById('hiddenSiegeIds');
            
            if (siegesSelectionnes.length === totalQuantity) {
                btn.disabled = false;
                btn.classList.remove('disabled');
                btn.style.pointerEvents = 'auto';
                btn.style.opacity = '1';
                btn.innerHTML = `Paiement <span id="btnTotal">$${total.toFixed(2)}</span>`;
                hiddenInput.value = siegesSelectionnes.join(',');
            } else {
                btn.disabled = true;
                btn.classList.add('disabled');
                btn.style.pointerEvents = 'none';
                btn.style.opacity = '0.6';
                btn.innerHTML = `Paiement <span id="btnTotal">$0.00</span>`;
                hiddenInput.value = '';
            }
        }

        function areSeatsAdjacent() {
            if (siegesSelectionnes.length <= 1) return true;
            
            const selectedSeats = siegesSelectionnes.map(id => {
                const btn = document.querySelector(`[data-siege-id="${id}"]`);
                return {
                    id: id,
                    rang: btn.dataset.siegeRang,
                    numero: parseInt(btn.dataset.siegeNumero)
                };
            });
            
            // Grouper par rang
            const seatsByRow = {};
            selectedSeats.forEach(seat => {
                if (!seatsByRow[seat.rang]) {
                    seatsByRow[seat.rang] = [];
                }
                seatsByRow[seat.rang].push(seat);
            });
            
            // Vérifier chaque rang
            for (const rang in seatsByRow) {
                const seatsInRow = seatsByRow[rang].sort((a, b) => a.numero - b.numero);
                
                for (let i = 1; i < seatsInRow.length; i++) {
                    if (seatsInRow[i].numero !== seatsInRow[i-1].numero + 1) {
                        return false;
                    }
                }
            }
            
            return true;
        }

        function showAdjacentWarning() {
            // Créer ou afficher le message d'avertissement
            let warningDiv = document.getElementById('adjacentWarning');
            if (!warningDiv) {
                warningDiv = document.createElement('div');
                warningDiv.id = 'adjacentWarning';
                warningDiv.className = 'alert alert-warning mt-3';
                warningDiv.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Les sièges doivent être côte à côte pour plusieurs billets.';
                document.querySelector('.sieges-container').parentNode.appendChild(warningDiv);
            }
            warningDiv.style.display = 'block';
        }

        function hideAdjacentWarning() {
            const warningDiv = document.getElementById('adjacentWarning');
            if (warningDiv) {
                warningDiv.style.display = 'none';
            }
        }

        function updateTotals() {
            // Simulation des totaux basés sur le panier
            totalBillets = 10.00; // À adapter selon les articles du panier
            fraisService = 1.51;
            
            document.getElementById('totalBillets').textContent = '$' + totalBillets.toFixed(2);
            document.getElementById('fraisService').textContent = '$' + fraisService.toFixed(2);
            
            updateConfirmationButton();
        }

        function loadPanierItems() {
            // Simulation - à adapter selon votre logique de récupération du panier
            console.log('Chargement des articles du panier...');
        }

        function zoomIn() {
            const container = document.querySelector('.sieges-container');
            const currentScale = parseFloat(container.style.transform?.replace('scale(', '').replace(')', '')) || 1;
            container.style.transform = `scale(${Math.min(currentScale + 0.1, 2)})`;
        }

        function zoomOut() {
            const container = document.querySelector('.sieges-container');
            const currentScale = parseFloat(container.style.transform?.replace('scale(', '').replace(')', '')) || 1;
            container.style.transform = `scale(${Math.max(currentScale - 0.1, 0.5)})`;
        }

        // Gestion du formulaire de confirmation
        document.getElementById('siegeForm').addEventListener('submit', function(e) {
            if (siegesSelectionnes.length !== totalQuantity) {
                e.preventDefault();
                alert(`Vous devez sélectionner exactement ${totalQuantity} siège${totalQuantity > 1 ? 's' : ''}.`);
                return false;
            }
            
            if (totalQuantity > 1 && !areSeatsAdjacent()) {
                e.preventDefault();
                alert('Les sièges doivent être côte à côte pour plusieurs billets.');
                return false;
            }
            
            return true;
        });
    </script>
}
